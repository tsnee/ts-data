---
name: Haskell CI

on:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-haskell@v1
        with:
          ghc-version: '9.12.2'
          cabal-version: '3.14.2.0'

      - name: Cache Cabal store
        uses: actions/cache@v4
        env:
          cache-name: cache-cabal
        with:
          path: cabal-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('ts-data.cabal') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Cache dist-newstyle
        uses: actions/cache@v4
        env:
          cache-name: cache-dist-newstyle
        with:
          path: dist-newstyle
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('app/**/*.hs','lib/**/*.hs', 'test/**/*.hs', 'ts-data.cabal') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Install dependencies, if necessary
        run: |
          cabal --store-dir $PWD/cabal-store update
          cabal --store-dir $PWD/cabal-store build --only-dependencies \
            --enable-benchmarks

      - name: Run tests with coverage
        run: |
          cabal --store-dir $PWD/cabal-store test --enable-coverage
          cabal --store-dir $PWD/cabal-store install hpc-coveralls
          hpc-coveralls ts-data

      - name: Upload coverage to coveralls.io
        uses: coverallsapp/github-action@v2

      - name: Build
        run: cabal --store-dir $PWD/cabal-store build --disable-documentation all

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.LIGHTSAIL_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.LIGHTSAIL_HOST }} >> ~/.ssh/known_hosts

      - name: Copy executables
        run: |
          rsync -azve "ssh -i ~/.ssh/id_ed25519" \
            dist-newstyle/build/x86_64-linux/ghc-9.12.2/ts-data-0.1.0.0/x/download-reports/build/download-reports/download-reports \
            dist-newstyle/build/x86_64-linux/ghc-9.12.2/ts-data-0.1.0.0/x/gendocs/build/gendocs/gendocs \
            dist-newstyle/build/x86_64-linux/ghc-9.12.2/ts-data-0.1.0.0/x/server/build/server/server \
            ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }}:

      - name: Restart server
        run: |
          ssh ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }} \
              'sudo systemctl restart ts-data'

      - name: Generate OpenAPI documentation
        run: |
          ssh ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }} \
              './gendocs -o static/openapi.json'

  hlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache Cabal store
        uses: actions/cache@v4
        env:
          cache-name: cache-cabal-hlint
        with:
          path: cabal-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('ts-data.cabal') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Install hlint
        run: |
          cabal --store-dir $PWD/cabal-store update
          cabal --store-dir $PWD/cabal-store install hlint

      - name: Run hlint
        run: cabal --store-dir $PWD/cabal-store run hlint app lib test --color

  fourmolu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache Cabal store
        uses: actions/cache@v4
        env:
          cache-name: cache-cabal-fourmolu
        with:
          path: cabal-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('ts-data.cabal') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Install fourmolu
        run: |
          cabal --store-dir $PWD/cabal-store update
          cabal --store-dir $PWD/cabal-store install fourmolu

      - name: Run fourmolu check
        run: cabal --store-dir $PWD/cabal-store run fourmolu --mode check $(find app lib test -name '*.hs')
